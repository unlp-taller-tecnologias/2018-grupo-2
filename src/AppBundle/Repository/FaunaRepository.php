<?php

namespace AppBundle\Repository;
use Doctrine\ORM\Tools\Pagination\Paginator;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
/**
 * FaunaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FaunaRepository extends DefaultEntityRepository
{
  public function setNameClass()
  {
    self::$nameClass = 'FaunaRepository';
  }

  protected function setOrderByAttribute(){
    self::$orderByAttribute = 'FaunaRepository.name';
  }

  protected function setQuery($arrayParams){
    $destination= (is_null($arrayParams['destination']) | $arrayParams['destination'] == "")? NULL :$arrayParams['destination'];
    $attendants= (is_null($arrayParams['attendants']) | $arrayParams['attendants'] == "")? NULL :$arrayParams['attendants'];
    $specie= (is_null($arrayParams['specie']) | $arrayParams['specie'] == "")? NULL :$arrayParams['specie'];
    $subspecie= (is_null($arrayParams['subspecie']) | $arrayParams['subspecie'] == "")? NULL :$arrayParams['subspecie'];
    $qb = $this->getEntityManager()->createQueryBuilder();
    $qb
      ->select('f')
      ->from('AppBundle:Fauna','f')
      ->join('f.attendants', 'a')
      ->join('f.subspecie', 'ss')
      ->where($qb->expr()->orX(($qb->expr()->like('f.destination', ":destination")),($qb->expr()->isNull(':destination'))))
      ->andWhere($qb->expr()->orX(($qb->expr()->eq('a.id', ':attendants')),($qb->expr()->isNull(':attendants'))))
      ->andWhere($qb->expr()->orX(($qb->expr()->eq('f.subspecie', ':subspecie')),($qb->expr()->isNull(':subspecie'))))
      ->andWhere($qb->expr()->orX(($qb->expr()->eq('ss.specie', ':specie')),($qb->expr()->isNull(':specie'))))
      ->orWhere($qb->expr()->andX(($qb->expr()->isNull(':destination')),($qb->expr()->isNull(':attendants')),($qb->expr()->isNull(':subspecie')),($qb->expr()->isNull(':specie'))))
      ->setParameters(array(
        "destination" =>  "%".$destination."%",
        "attendants" => $attendants,
        "specie" => $specie,
        "subspecie" => $subspecie,
    ));
    return $qb->getQuery();
  }

  //   $destination= (is_null($arrayParams['destination']) | $arrayParams['destination'] == "")? 'NULL' :$arrayParams['destination'];
  //   $attendants= (is_null($arrayParams['attendants']) | $arrayParams['attendants'] == "")? 'NULL' :$arrayParams['attendants'];
  //   $specie= (is_null($arrayParams['specie']) | $arrayParams['specie'] == "")? 'NULL' :$arrayParams['specie'];
  //   $subspecie= (is_null($arrayParams['subspecie']) | $arrayParams['subspecie'] == "")? 'NULL' :$arrayParams['subspecie'];
  //   // var_dump($destination."----".$attendants."----".$specie."----".$subspecie."----");
  //   // die();
  //   $dql ="SELECT f FROM AppBundle:Fauna f  LEFT JOIN f.attendants a  JOIN f.subspecie ss WHERE ( 
  //               ((f.destination like :destination and :destination  <>  'NULL') or (:destination = 'NULL')
  //           AND ((a.id = :attendants and :attendants <>  'NULL')or(:attendants  = 'NULL'))
  //           AND ((ss.specie = :specie and :specie  <> 'NULL')or(:specie  = 'NULL'))
  //           AND ((f.subspecie = :subspecie  and :subspecie <> 'NULL')or(:subspecie  = 'NULL'))
  //           ) OR (:destination  = 'NULL' and :attendants  = 'NULL'  and :subspecie  = 'NULL'))";
  //   $parameters = array(
  //       "destination" => $destination."%",
  //       "attendants" => $attendants,
  //       "specie" => $specie,
  //       "subspecie" => $subspecie
  //   );
  //   $query = $this->getEntityManager()->createQuery($dql)
  //   ->setParameters($parameters);
  //   //
  //   // $dql = $this->getEntityManager()->createQuery($sql)->setParameter($parameters);
  //   // $dql->setParameter(":destination", $destination."%");
  //   // $dql->setParameter(":attendants", $attendants);
  //   // $dql->setParameter(":specie", $specie);
  //   // $dql->setParameter(":subspecie", $subspecie);
  //   // 
  //   // $primero = false;
  //   // $descartar = 0;
  //   // foreach ($arrayParams as $key => $value) {
  //   //     switch ($key) {
  //   //         case 'like':
  //   //             if ($descartar = 0) {
  //   //                 if (condition) {
  //   //                     # code...
  //   //                 }
  //   //             }
  //   //             break;
  //   //         case 'join':
  //   //             if ($descartar = 0) {
                    
  //   //             }
  //   //             break;
  //   //         default:
  //   //             if (is_null($value)) {
  //   //               $descartar++;
  //   //               break;      
  //   //             }
  //   //             $descartar = 0;
  //   //             break;
  //   //     }
  //   //     $dql = $this->getEntityManager()->createQuery("SELECT f FROM AppBundle:Fauna f
  //   //                                     WHERE f.subspecie = 2 ");
  //   // }
  //   //$dql = $this->createQueryBuilder(self::$nameClass);
  //   //$dql = $this->getEntityManager()->createQuery("SELECT f FROM AppBundle:Fauna f
  //   //                                    LEFT JOIN f.attendants a
  //   //                                    WHERE a.id = 2 ");
  //   // $dql = $this->getEntityManager()->createQuery("SELECT f FROM AppBundle:Fauna f
  //   //                                  JOIN f.subspecie ss
  //   //                                    WHERE ss.specie = 14 ");
  //   //$dql = $this->getEntityManager()->createQuery("SELECT f FROM AppBundle:Fauna f
  //   //                                    WHERE f.subspecie = 2 ");
  //   //armo la query en base al array1
  //   // foreach ($arrayParams as $key => $value) {
  //   //   if (!is_null($value)) {
  //   //     if (!$primero) {
  //   //       $primero = true;
  //   //       //Attendant = :attendant
  //   //       $dql->where(self::$nameClass.'.'.$key.' = :'.$key)
  //   //       ->setParameter($key, $value);
  //   //     }
  //   //     else {
  //   //       $dql->andWhere(self::$nameClass.'.'.$key.' = :'.$key)
  //   //       ->setParameter($key, $value);
  //   //     }
  //   //   }
  //   // }
  //   // $qb = $this->getEntityManager()->createQueryBuilder();
  //   //
  //   // $qb->select('od', 'md');
  //   // $qb->from('Fauna', 'od');
  //   // $qb->innerJoin('Attendant', 'md', \Doctrine\ORM\Query\Expr\Join::WITH, 'od.attendant = md.id');
  //   // $qb->leftJoin('u.friendsOf', 'mf', 'with', 'mf.gender = :male')->setParameter('male', 1)
  //   //$qb->where('od.attendant = ?1');
  //   //$qb->setParameter(1, 1);

  //   //->innerJoin('person.provider','provider')
  //   //die();
  //   //$dql->orderBy(self::$orderByAttribute, 'DESC');
  //   return $query;
  //   //return $qb;
  // }
}
